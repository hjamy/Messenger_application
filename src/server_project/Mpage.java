/*
This class is the server's main page. It has three button's for server on , off 
and closing the server main page .Also a Test Area to show the server's action history.
*/

package server_project;

import Rmi_pack.RemoteMethod;
import java.io.IOException;
import java.net.ServerSocket;
import javax.swing.JFrame;
import java.net.Socket;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.HashSet;
import javax.swing.JOptionPane;
import messenger_application.Home;

public class Mpage extends javax.swing.JFrame {
    
    public Mpage() 
    {
        initComponents();
        On_button.setEnabled(true);
        Off_button.setEnabled(false);
    } 
    
        
    private Thread run;
    private ServerSocket server_socket;
    private boolean server_run = false;
    
    
    /*
    When user presses the start button the start_server function will be called .
    Ths function opens a server socket in a port(in this program the port is 7000).
    Then with the help of Registry and RMI (described inside later) the list containing 
    all the connected clients are bind.The thread for server turning on will continue to 
    run until user presses the stop button and changes the value of server_run to "false"
    */
    
    
    private void start_server() throws Exception
    {      
        run = new Thread(new Runnable(){
            @Override
            public void run() {  
                try 
                {
                    server_run = true;
                    On_button.setEnabled(false);
                    Off_button.setEnabled(true);

                    server_status.append("The chat server is running.\n");
                                            
                    server_socket = new ServerSocket(7000);
                    
                    /*
                    "registry" is a obejct of the "Registry" Class.A registry was created in the 
                    7001 port and the loaction was kept in the "registry" object.
                    An object of remote method was bind to the "registry" object 
                    under the String "taja".(Initial of the developers: Tasin & Jamy).
                    Whenever this obejct needs to be remotely accessed , it will require 
                    this String to do so. The String almost works as a password to access that object.
                    
                    */
                    
                    Registry registry = LocateRegistry.createRegistry(7001);
                    registry.bind("taja", new RemoteMethod());
                    
                    while (server_run) {
                        
                        new Clients(server_socket.accept()).start();
                    }
                }
                catch(Exception e)
                {
                    System.out.println(e);
                }
            }
        });

            run.start();                                 
    }
    
    /*
    The stop_server function is calle when user presses the stop button in the GUI.It promts the user to make 
    sure the user really wants to close the server.Then it closes the server socket and kills the server running thread.
    */
    private void stop_server() throws IOException
    { 
        int c = JOptionPane.showConfirmDialog(this, "Are you sure to stop server now", "Stop Server", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (c == JOptionPane.YES_OPTION)
        {
            server_socket.close();
            server_run=false;
            On_button.setEnabled(true);
            Off_button.setEnabled(false);
            bbutton.setEnabled(true);

            server_status.append("The chat server has stopped.\n");
        } 
                
                
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jSpinner1 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        On_button = new javax.swing.JButton();
        Off_button = new javax.swing.JButton();
        Exit_button = new javax.swing.JButton();
        server_label = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        server_status = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        bbutton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        On_button.setBackground(new java.awt.Color(255, 255, 255));
        On_button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        On_button.setForeground(new java.awt.Color(0, 204, 51));
        On_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/server_project/images/power.png"))); // NOI18N
        On_button.setText("Start Server");
        On_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                On_buttonActionPerformed(evt);
            }
        });
        jPanel2.add(On_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, 50));

        Off_button.setBackground(new java.awt.Color(255, 255, 255));
        Off_button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Off_button.setForeground(new java.awt.Color(204, 0, 0));
        Off_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/server_project/images/cancel-button.png"))); // NOI18N
        Off_button.setText("Stop Server");
        Off_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Off_buttonActionPerformed(evt);
            }
        });
        jPanel2.add(Off_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, -1, 50));

        Exit_button.setBackground(new java.awt.Color(255, 255, 255));
        Exit_button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Exit_button.setForeground(new java.awt.Color(255, 51, 0));
        Exit_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/server_project/images/exit orange.png"))); // NOI18N
        Exit_button.setText("Exit");
        Exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_buttonActionPerformed(evt);
            }
        });
        jPanel2.add(Exit_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, 120, 50));

        server_label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        server_label.setText("Server is stopped...");
        jPanel2.add(server_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 112, 23));

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));

        server_status.setColumns(20);
        server_status.setRows(5);
        jScrollPane1.setViewportView(server_status);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 450, 180));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/server_project/images/loadtjtjtj.gif"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 230, 130));

        bbutton.setBackground(new java.awt.Color(255, 255, 255));
        bbutton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bbutton.setText("Back");
        bbutton.setBorder(null);
        bbutton.setBorderPainted(false);
        bbutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuttonActionPerformed(evt);
            }
        });
        jPanel2.add(bbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 400, 70, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    This is the "start" button in the GUI.
    It will call the start_server() function when pressed
    */
    private void On_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_On_buttonActionPerformed

        try {
            
            start_server();
            bbutton.setEnabled(false);
            server_label.setText("Server is running...");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_On_buttonActionPerformed

    /*
    This is the "stop" button of the GUI.
    This will call the stop_server() button when pressed
    */
    private void Off_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Off_buttonActionPerformed
        
        try {
            
            stop_server();
            server_label.setText("Server is stopped...");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_Off_buttonActionPerformed

    /*
    This is the "exit" button of the Gui.
    When pressed it wil prompt the user if he really wants to exit the 
    server project and will exit when confirmend
    */
    private void Exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_buttonActionPerformed

        int c = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (c == JOptionPane.YES_OPTION) {
         
            System.exit(0);
        }
        
    }//GEN-LAST:event_Exit_buttonActionPerformed

    private void bbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuttonActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        Home.main(null);
    }//GEN-LAST:event_bbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mpage().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit_button;
    private javax.swing.JButton Off_button;
    private javax.swing.JButton On_button;
    private javax.swing.JButton bbutton;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel server_label;
    public static javax.swing.JTextArea server_status;
    // End of variables declaration//GEN-END:variables
}
